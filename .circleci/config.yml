# Golang CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/ for more details
version: 2.1
jobs:
  build-and-push-image:
    docker:
      - image: cimg/go:1.24 # version of GO
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: "Log in to Docker Hub"
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: "Determine and Export Docker Image Tag"
          command: |
            # Use the git tag if it exists
            if [ -n "$CIRCLE_TAG" ]; then
              DOCKER_TAG=${CIRCLE_TAG}
            # Use the branch name and short SHA for other commits
            else
              # Sanitize branch name to be Docker-tag friendly
              SANITIZED_BRANCH=$(echo $CIRCLE_BRANCH | sed 's/[^a-zA-Z0-9]/-/g')
              DOCKER_TAG="$SANITIZED_BRANCH-$(echo $CIRCLE_SHA1 | cut -c1-7)"
            fi

            # Persist the tag for subsequent steps
            echo "export DOCKER_TAG=${DOCKER_TAG}" >> $BASH_ENV
            echo "Docker tag set to: ${DOCKER_TAG}"

      - run:
        name: : Build Docker Image
        command: |
            source $BASH_ENV

            docker build -f Dockerfile-builder . --rm=false -t thoughtmachine/prometheus-cardinality-exporter:"latest"
            docker run --rm -it thoughtmachine/prometheus-cardinality-exporter:"latest" --help

      - run:
          name: "Build and Push distroless Docker Image"
          command: |
            source $BASH_ENV
            IMAGE_NAME="thoughtmachine/prometheus-cardinality-exporter"


            # Build and push the version-specific tag in one command
            docker buildx build \
              --platform=linux/amd64 \
              -f Dockerfile-builder_distroless \
              -t "${IMAGE_NAME}:${DOCKER_TAG}" \
              --push \
              .

            # If on the main branch, also tag the same image as `latest` and push it
            if [ "$CIRCLE_BRANCH" == "main" ]; then
              echo "Tagging and pushing 'latest' from main branch..."
              docker tag "${IMAGE_NAME}:${DOCKER_TAG}" "${IMAGE_NAME}:latest"
              docker push "${IMAGE_NAME}:latest"
            fi

workflows:
  build-and-deploy:
    jobs:
      - build-and-push-image:
          context: conntest-dockerhub-release
          filters:
            tags:
              only: /.*/ # This ensures the job runs for tags
            branches:
              only: /.*/ # And also for branches
